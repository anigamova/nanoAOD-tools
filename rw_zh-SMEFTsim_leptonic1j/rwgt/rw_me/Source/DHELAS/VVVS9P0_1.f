C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     P(1,1)*P(2,2)*P(3,1) + 2*P(1,2)*P(2,2)*P(3,1) +
C      2*P(1,1)*P(2,3)*P(3,1) - 2*P(1,1)*P(2,1)*P(3,2) -
C      P(1,1)*P(2,2)*P(3,2) - 2*P(1,3)*P(2,2)*P(3,2) -
C      P(1,1)*P(2,1)*P(3,3) - 2*P(1,3)*P(2,1)*P(3,3) +
C      P(1,2)*P(2,2)*P(3,3) - P(1,3)*P(2,2)*P(3,3) +
C      P(1,1)*P(2,3)*P(3,3) + 2*P(1,2)*P(2,3)*P(3,3) -
C      2*P(-1,2)**2*P(3,1)*Metric(1,2) - P(-1,3)**2*P(3,1)*Metric(1,2)
C      + 2*P(-1,1)**2*P(3,2)*Metric(1,2) + P(-1,3)**2*P(3,2)*Metric(1,2)
C      + P(-1,1)**2*P(3,3)*Metric(1,2) - P(-1,2)**2*P(3,3)*Metric(1,2)
C      + P(-1,1)*P(-1,3)*P(3,3)*Metric(1,2) - P(-1,2)*P(-1,3)*P(3,3)*Me
C     tric(1,2) + P(-1,2)**2*P(2,1)*Metric(1,3) + 2*P(-1,3)**2*P(2,1)*M
C     etric(1,3) - P(-1,1)**2*P(2,2)*Metric(1,3) - P(-1,1)*P(-1,2)*P(2,
C     2)*Metric(1,3) + P(-1,2)*P(-1,3)*P(2,2)*Metric(1,3) +
C      P(-1,3)**2*P(2,2)*Metric(1,3) - 2*P(-1,1)**2*P(2,3)*Metric(1,3)
C      - P(-1,2)**2*P(2,3)*Metric(1,3) + P(-1,1)*P(-1,2)*P(1,1)*Metric(
C     2,3) + P(-1,2)**2*P(1,1)*Metric(2,3) - P(-1,1)*P(-1,3)*P(1,1)*Met
C     ric(2,3) - P(-1,3)**2*P(1,1)*Metric(2,3) - P(-1,1)**2*P(1,2)*Metr
C     ic(2,3) - 2*P(-1,3)**2*P(1,2)*Metric(2,3) + P(-1,1)**2*P(1,3)*Met
C     ric(2,3) + 2*P(-1,2)**2*P(1,3)*Metric(2,3)
C     
      SUBROUTINE VVVS9P0_1(V2, V3, S4, COUP, M1, W1,V1)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      REAL*8 P3(0:3)
      REAL*8 W1
      COMPLEX*16 TMP32
      COMPLEX*16 TMP28
      COMPLEX*16 COUP
      COMPLEX*16 S4(*)
      COMPLEX*16 V3(*)
      REAL*8 M1
      REAL*8 P2(0:3)
      COMPLEX*16 TMP20
      COMPLEX*16 TMP33
      COMPLEX*16 TMP67
      COMPLEX*16 TMP18
      COMPLEX*16 TMP19
      COMPLEX*16 V2(*)
      REAL*8 P1(0:3)
      COMPLEX*16 TMP23
      COMPLEX*16 TMP30
      COMPLEX*16 DENOM
      COMPLEX*16 V1(6)
      COMPLEX*16 TMP22
      COMPLEX*16 TMP31
      COMPLEX*16 TMP14
      COMPLEX*16 TMP65
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      V1(1) = +V2(1)+V3(1)+S4(1)
      V1(2) = +V2(2)+V3(2)+S4(2)
      P1(0) = -DBLE(V1(1))
      P1(1) = -DBLE(V1(2))
      P1(2) = -DIMAG(V1(2))
      P1(3) = -DIMAG(V1(1))
      TMP20 = (P1(0)*V2(3)-P1(1)*V2(4)-P1(2)*V2(5)-P1(3)*V2(6))
      TMP22 = (P3(0)*V2(3)-P3(1)*V2(4)-P3(2)*V2(5)-P3(3)*V2(6))
      TMP23 = (V3(3)*V2(3)-V3(4)*V2(4)-V3(5)*V2(5)-V3(6)*V2(6))
      TMP28 = (P1(0)*P2(0)-P1(1)*P2(1)-P1(2)*P2(2)-P1(3)*P2(3))
      TMP65 = (P2(0)*V2(3)-P2(1)*V2(4)-P2(2)*V2(5)-P2(3)*V2(6))
      TMP67 = (V3(3)*P3(0)-V3(4)*P3(1)-V3(5)*P3(2)-V3(6)*P3(3))
      TMP19 = (V3(3)*P2(0)-V3(4)*P2(1)-V3(5)*P2(2)-V3(6)*P2(3))
      TMP18 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP14 = (P3(0)*P3(0)-P3(1)*P3(1)-P3(2)*P3(2)-P3(3)*P3(3))
      TMP33 = (P3(0)*P2(0)-P3(1)*P2(1)-P3(2)*P2(2)-P3(3)*P2(3))
      TMP32 = (P3(0)*P1(0)-P3(1)*P1(1)-P3(2)*P1(2)-P3(3)*P1(3))
      TMP31 = (P2(0)*P2(0)-P2(1)*P2(1)-P2(2)*P2(2)-P2(3)*P2(3))
      TMP30 = (P1(0)*P1(0)-P1(1)*P1(1)-P1(2)*P1(2)-P1(3)*P1(3))
      DENOM = COUP/(P1(0)**2-P1(1)**2-P1(2)**2-P1(3)**2 - M1 * (M1 -CI
     $ * W1))
      V1(3)= DENOM*S4(3)*(P1(0)*(TMP23*(-CI*(TMP28+TMP31)+CI*(TMP32
     $ +TMP14))+(TMP18*(-1D0)*(+CI*(TMP65)+2D0 * CI*(TMP22))+(TMP19*(
     $ +CI*(TMP65)+2D0 * CI*(TMP20))+TMP67*(-CI*(TMP22)+CI*(TMP20)))))
     $ +(V2(3)*(TMP67*(-CI*(TMP30+TMP32)+CI*(TMP31+TMP33))+(TMP14*(-CI
     $ *(TMP19)+CI*(TMP18))+(-2D0 * CI*(TMP19*TMP30)+2D0 * CI*(TMP18
     $ *TMP31))))+(V3(3)*(TMP65*(-CI*(TMP33+TMP14)+CI*(TMP30+TMP28))
     $ +(TMP20*(-1D0)*(+CI*(TMP31)+2D0 * CI*(TMP14))+TMP22*(+CI*(TMP31)
     $ +2D0 * CI*(TMP30))))+(P2(0)*(TMP23*(+CI*(TMP30)+2D0 * CI*(TMP14)
     $ )+(TMP65*(-1D0)*(+CI*(TMP67)+2D0 * CI*(TMP18))-2D0 * CI*(TMP22
     $ *TMP67)))+P3(0)*(TMP23*(-1D0)*(+CI*(TMP30)+2D0 * CI*(TMP31))
     $ +(TMP65*(+CI*(TMP67)+2D0 * CI*(TMP19))+2D0 * CI*(TMP20*TMP67))))
     $ )))
      V1(4)= DENOM*S4(3)*(P1(1)*(TMP23*(-CI*(TMP28+TMP31)+CI*(TMP32
     $ +TMP14))+(TMP18*(-1D0)*(+CI*(TMP65)+2D0 * CI*(TMP22))+(TMP19*(
     $ +CI*(TMP65)+2D0 * CI*(TMP20))+TMP67*(-CI*(TMP22)+CI*(TMP20)))))
     $ +(V2(4)*(TMP67*(-CI*(TMP30+TMP32)+CI*(TMP31+TMP33))+(TMP14*(-CI
     $ *(TMP19)+CI*(TMP18))+(-2D0 * CI*(TMP19*TMP30)+2D0 * CI*(TMP18
     $ *TMP31))))+(V3(4)*(TMP65*(-CI*(TMP33+TMP14)+CI*(TMP30+TMP28))
     $ +(TMP20*(-1D0)*(+CI*(TMP31)+2D0 * CI*(TMP14))+TMP22*(+CI*(TMP31)
     $ +2D0 * CI*(TMP30))))+(P2(1)*(TMP23*(+CI*(TMP30)+2D0 * CI*(TMP14)
     $ )+(TMP65*(-1D0)*(+CI*(TMP67)+2D0 * CI*(TMP18))-2D0 * CI*(TMP22
     $ *TMP67)))+P3(1)*(TMP23*(-1D0)*(+CI*(TMP30)+2D0 * CI*(TMP31))
     $ +(TMP65*(+CI*(TMP67)+2D0 * CI*(TMP19))+2D0 * CI*(TMP20*TMP67))))
     $ )))
      V1(5)= DENOM*S4(3)*(P1(2)*(TMP23*(-CI*(TMP28+TMP31)+CI*(TMP32
     $ +TMP14))+(TMP18*(-1D0)*(+CI*(TMP65)+2D0 * CI*(TMP22))+(TMP19*(
     $ +CI*(TMP65)+2D0 * CI*(TMP20))+TMP67*(-CI*(TMP22)+CI*(TMP20)))))
     $ +(V2(5)*(TMP67*(-CI*(TMP30+TMP32)+CI*(TMP31+TMP33))+(TMP14*(-CI
     $ *(TMP19)+CI*(TMP18))+(-2D0 * CI*(TMP19*TMP30)+2D0 * CI*(TMP18
     $ *TMP31))))+(V3(5)*(TMP65*(-CI*(TMP33+TMP14)+CI*(TMP30+TMP28))
     $ +(TMP20*(-1D0)*(+CI*(TMP31)+2D0 * CI*(TMP14))+TMP22*(+CI*(TMP31)
     $ +2D0 * CI*(TMP30))))+(P2(2)*(TMP23*(+CI*(TMP30)+2D0 * CI*(TMP14)
     $ )+(TMP65*(-1D0)*(+CI*(TMP67)+2D0 * CI*(TMP18))-2D0 * CI*(TMP22
     $ *TMP67)))+P3(2)*(TMP23*(-1D0)*(+CI*(TMP30)+2D0 * CI*(TMP31))
     $ +(TMP65*(+CI*(TMP67)+2D0 * CI*(TMP19))+2D0 * CI*(TMP20*TMP67))))
     $ )))
      V1(6)= DENOM*S4(3)*(P1(3)*(TMP23*(-CI*(TMP28+TMP31)+CI*(TMP32
     $ +TMP14))+(TMP18*(-1D0)*(+CI*(TMP65)+2D0 * CI*(TMP22))+(TMP19*(
     $ +CI*(TMP65)+2D0 * CI*(TMP20))+TMP67*(-CI*(TMP22)+CI*(TMP20)))))
     $ +(V2(6)*(TMP67*(-CI*(TMP30+TMP32)+CI*(TMP31+TMP33))+(TMP14*(-CI
     $ *(TMP19)+CI*(TMP18))+(-2D0 * CI*(TMP19*TMP30)+2D0 * CI*(TMP18
     $ *TMP31))))+(V3(6)*(TMP65*(-CI*(TMP33+TMP14)+CI*(TMP30+TMP28))
     $ +(TMP20*(-1D0)*(+CI*(TMP31)+2D0 * CI*(TMP14))+TMP22*(+CI*(TMP31)
     $ +2D0 * CI*(TMP30))))+(P2(3)*(TMP23*(+CI*(TMP30)+2D0 * CI*(TMP14)
     $ )+(TMP65*(-1D0)*(+CI*(TMP67)+2D0 * CI*(TMP18))-2D0 * CI*(TMP22
     $ *TMP67)))+P3(3)*(TMP23*(-1D0)*(+CI*(TMP30)+2D0 * CI*(TMP31))
     $ +(TMP65*(+CI*(TMP67)+2D0 * CI*(TMP19))+2D0 * CI*(TMP20*TMP67))))
     $ )))
      END


