C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     P(1,1)*P(2,2)*P(3,1) + 2*P(1,2)*P(2,2)*P(3,1) +
C      2*P(1,1)*P(2,3)*P(3,1) - 2*P(1,1)*P(2,1)*P(3,2) -
C      P(1,1)*P(2,2)*P(3,2) - 2*P(1,3)*P(2,2)*P(3,2) -
C      P(1,1)*P(2,1)*P(3,3) - 2*P(1,3)*P(2,1)*P(3,3) +
C      P(1,2)*P(2,2)*P(3,3) - P(1,3)*P(2,2)*P(3,3) +
C      P(1,1)*P(2,3)*P(3,3) + 2*P(1,2)*P(2,3)*P(3,3) -
C      2*P(-1,2)**2*P(3,1)*Metric(1,2) - P(-1,3)**2*P(3,1)*Metric(1,2)
C      + 2*P(-1,1)**2*P(3,2)*Metric(1,2) + P(-1,3)**2*P(3,2)*Metric(1,2)
C      + P(-1,1)**2*P(3,3)*Metric(1,2) - P(-1,2)**2*P(3,3)*Metric(1,2)
C      + P(-1,1)*P(-1,3)*P(3,3)*Metric(1,2) - P(-1,2)*P(-1,3)*P(3,3)*Me
C     tric(1,2) + P(-1,2)**2*P(2,1)*Metric(1,3) + 2*P(-1,3)**2*P(2,1)*M
C     etric(1,3) - P(-1,1)**2*P(2,2)*Metric(1,3) - P(-1,1)*P(-1,2)*P(2,
C     2)*Metric(1,3) + P(-1,2)*P(-1,3)*P(2,2)*Metric(1,3) +
C      P(-1,3)**2*P(2,2)*Metric(1,3) - 2*P(-1,1)**2*P(2,3)*Metric(1,3)
C      - P(-1,2)**2*P(2,3)*Metric(1,3) + P(-1,1)*P(-1,2)*P(1,1)*Metric(
C     2,3) + P(-1,2)**2*P(1,1)*Metric(2,3) - P(-1,1)*P(-1,3)*P(1,1)*Met
C     ric(2,3) - P(-1,3)**2*P(1,1)*Metric(2,3) - P(-1,1)**2*P(1,2)*Metr
C     ic(2,3) - 2*P(-1,3)**2*P(1,2)*Metric(2,3) + P(-1,1)**2*P(1,3)*Met
C     ric(2,3) + 2*P(-1,2)**2*P(1,3)*Metric(2,3)
C     
      SUBROUTINE VVVS9PH1_4(V1, V2, V3, COUP, M4, W4,S4)
      IMPLICIT NONE
      INCLUDE '../MODEL/input.inc'
      INCLUDE '../MODEL/coupl.inc'
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 TMP61
      REAL*8 P3(0:3)
      COMPLEX*16 TMP21
      COMPLEX*16 TMP14
      COMPLEX*16 TMP28
      REAL*8 M4
      COMPLEX*16 TMP25
      COMPLEX*16 TMP18
      COMPLEX*16 V3(*)
      REAL*8 P2(0:3)
      COMPLEX*16 TMP20
      COMPLEX*16 TMP33
      COMPLEX*16 TMP67
      COMPLEX*16 TMP24
      COMPLEX*16 S4(3)
      COMPLEX*16 TMP19
      COMPLEX*16 V2(*)
      REAL*8 P1(0:3)
      COMPLEX*16 TMP23
      COMPLEX*16 TMP30
      COMPLEX*16 TMP66
      COMPLEX*16 DENOM
      COMPLEX*16 FCT2
      REAL*8 P4(0:3)
      COMPLEX*16 V1(*)
      COMPLEX*16 TMP22
      COMPLEX*16 TMP31
      COMPLEX*16 TMP32
      COMPLEX*16 TMP65
      COMPLEX*16 COUP
      REAL*8 W4
      COMPLEX*16 TMP17
      P1(0) = DBLE(V1(1))
      P1(1) = DBLE(V1(2))
      P1(2) = DIMAG(V1(2))
      P1(3) = DIMAG(V1(1))
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      S4(1) = +V1(1)+V2(1)+V3(1)
      S4(2) = +V1(2)+V2(2)+V3(2)
      P4(0) = -DBLE(S4(1))
      P4(1) = -DBLE(S4(2))
      P4(2) = -DIMAG(S4(2))
      P4(3) = -DIMAG(S4(1))
      TMP24 = (P2(0)*V1(3)-P2(1)*V1(4)-P2(2)*V1(5)-P2(3)*V1(6))
      TMP25 = (P3(0)*V1(3)-P3(1)*V1(4)-P3(2)*V1(5)-P3(3)*V1(6))
      TMP20 = (P1(0)*V2(3)-P1(1)*V2(4)-P1(2)*V2(5)-P1(3)*V2(6))
      TMP21 = (V3(3)*V1(3)-V3(4)*V1(4)-V3(5)*V1(5)-V3(6)*V1(6))
      TMP22 = (P3(0)*V2(3)-P3(1)*V2(4)-P3(2)*V2(5)-P3(3)*V2(6))
      TMP23 = (V3(3)*V2(3)-V3(4)*V2(4)-V3(5)*V2(5)-V3(6)*V2(6))
      TMP61 = (P4(0)*P4(0)-P4(1)*P4(1)-P4(2)*P4(2)-P4(3)*P4(3))
      TMP28 = (P1(0)*P2(0)-P1(1)*P2(1)-P1(2)*P2(2)-P1(3)*P2(3))
      TMP65 = (P2(0)*V2(3)-P2(1)*V2(4)-P2(2)*V2(5)-P2(3)*V2(6))
      TMP66 = (P1(0)*V1(3)-P1(1)*V1(4)-P1(2)*V1(5)-P1(3)*V1(6))
      TMP67 = (V3(3)*P3(0)-V3(4)*P3(1)-V3(5)*P3(2)-V3(6)*P3(3))
      TMP19 = (V3(3)*P2(0)-V3(4)*P2(1)-V3(5)*P2(2)-V3(6)*P2(3))
      TMP18 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP14 = (P3(0)*P3(0)-P3(1)*P3(1)-P3(2)*P3(2)-P3(3)*P3(3))
      TMP33 = (P3(0)*P2(0)-P3(1)*P2(1)-P3(2)*P2(2)-P3(3)*P2(3))
      TMP32 = (P3(0)*P1(0)-P3(1)*P1(1)-P3(2)*P1(2)-P3(3)*P1(3))
      TMP31 = (P2(0)*P2(0)-P2(1)*P2(1)-P2(2)*P2(2)-P2(3)*P2(3))
      TMP30 = (P1(0)*P1(0)-P1(1)*P1(1)-P1(2)*P1(2)-P1(3)*P1(3))
      TMP17 = (V2(3)*V1(3)-V2(4)*V1(4)-V2(5)*V1(5)-V2(6)*V1(6))
      FCT2 = ((M4*(+CI*(W4)-M4)+TMP61))**(2D0)
      DENOM = COUP/(FCT2)
      S4(3)= DENOM*2D0 * M4*MDL_DWH*(TMP65*(TMP21*1D0/2D0*(TMP33+TMP14
     $ -TMP30-TMP28)+(TMP18*1D0/2D0*(TMP66+2D0*(TMP24))+(+1D0/2D0
     $ *(TMP67*(TMP24-TMP25))+TMP19*(-1D0/2D0)*(TMP66+2D0*(TMP25)))))
     $ +(TMP17*(TMP67*1D0/2D0*(TMP30+TMP32-TMP31-TMP33)+(TMP14*1D0/2D0
     $ *(TMP19-TMP18)+(TMP19*TMP30-TMP18*TMP31)))+(TMP23*(TMP66*1D0
     $ /2D0*(TMP28+TMP31-TMP32-TMP14)+(+1D0/2D0*(TMP25*(TMP30+2D0
     $ *(TMP31)))+TMP24*(-1D0/2D0)*(TMP30+2D0*(TMP14))))+(TMP20*(TMP21
     $ *1D0/2D0*(TMP31+2D0*(TMP14))+(TMP66*(-1D0/2D0)*(TMP67+2D0
     $ *(TMP19))-TMP25*TMP67))+TMP22*(TMP21*(-1D0/2D0)*(TMP31+2D0
     $ *(TMP30))+(TMP66*1D0/2D0*(TMP67+2D0*(TMP18))+TMP24*TMP67))))))
      END


